<?xml version="1.0"?>
<!--
  ~  @(#)ruleset.xml
  ~
  ~  Copyright (c) Luis Antonio Mata Mata. All rights reserved.
  ~
  ~  All rights to this product are owned by Luis Antonio Mata Mata and may only
  ~  be used under the terms of its associated license document. You may NOT
  ~  copy, modify, sublicense, or distribute this source file or portions of
  ~  it unless previously authorized in writing by Luis Antonio Mata Mata.
  ~  In any event, this notice and the above copyright must always be included
  ~  verbatim with this file.
  -->

<ruleset name="Favorites">
	<description>
		Reglas proyectos PRX
	</description>
	<rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
	<rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
	<rule ref="category/java/bestpractices.xml/AccessorMethodGeneration" />
	<rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
	<rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
	<rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
	<rule ref="category/java/bestpractices.xml/CheckResultSet" />
	<rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
	<rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
	<rule ref="category/java/bestpractices.xml/OneDeclarationPerLine" />
	<rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInCaseInsensitiveComparisons" />
	<rule ref="category/java/bestpractices.xml/PositionLiteralsFirstInComparisons" />
	<rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
	<rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
	<rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
	<rule ref="category/java/bestpractices.xml/UnusedImports" />
	<rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
	<rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
	<rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />
	<rule ref="category/java/bestpractices.xml/UseVarargs" />
	<rule ref="category/java/codestyle.xml/AtLeastOneConstructor" />
	<rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
	<rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
	<rule ref="category/java/codestyle.xml/AvoidUsingNativeCode" />
	<rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
	<rule ref="category/java/codestyle.xml/ConfusingTernary" />
	<rule ref="category/java/codestyle.xml/DefaultPackage" />
	<rule ref="category/java/codestyle.xml/DontImportJavaLang" />
	<rule ref="category/java/codestyle.xml/DuplicateImports" />
	<rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
	<rule ref="category/java/codestyle.xml/ExtendsObject" />
	<rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
	<rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
	<rule ref="category/java/codestyle.xml/TooManyStaticImports" />
	<rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />
	<rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
	<rule ref="category/java/codestyle.xml/UnnecessaryModifier" />
	<rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
	<rule ref="category/java/codestyle.xml/UselessParentheses" />
	<rule ref="category/java/codestyle.xml/UselessQualifiedThis" />
	<rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
	<rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
	<rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
	<rule ref="category/java/design.xml/CollapsibleIfStatements" />
	<rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
	<rule ref="category/java/design.xml/GodClass" />
	<rule ref="category/java/design.xml/ImmutableField" />
	<rule ref="category/java/design.xml/LogicInversion" />
	<rule ref="category/java/design.xml/SimplifiedTernary" />
	<rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
	<rule ref="category/java/design.xml/SimplifyBooleanReturns" />
	<rule ref="category/java/design.xml/SimplifyConditional" />
	<rule ref="category/java/design.xml/SingularField" />
	<rule ref="category/java/design.xml/SwitchDensity" />
	<rule ref="category/java/design.xml/UselessOverridingMethod" />
	<rule ref="category/java/design.xml/UseObjectForClearerAPI" />
	<rule ref="category/java/design.xml/UseUtilityClass" />
	<rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
	<rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody" />
	<rule ref="category/java/errorprone.xml/AssignmentInOperand" />
	<rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
	<rule ref="category/java/errorprone.xml/AvoidAccessibilityAlteration" />
	<rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
	<rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
	<rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals" />
	<rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
	<rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition" />
	<rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
	<rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
	<rule ref="category/java/errorprone.xml/BadComparison" />
	<rule ref="category/java/errorprone.xml/BrokenNullCheck" />
	<rule ref="category/java/errorprone.xml/CheckSkipResult" />
	<rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
	<rule ref="category/java/errorprone.xml/CloseResource" />
	<rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
	<rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
	<rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly" />
	<rule ref="category/java/errorprone.xml/DontImportSun" />
	<rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
	<rule ref="category/java/errorprone.xml/EmptyCatchBlock" />
	<rule ref="category/java/errorprone.xml/EmptyFinallyBlock" />
	<rule ref="category/java/errorprone.xml/EmptyIfStmt" />
	<rule ref="category/java/errorprone.xml/EmptyInitializer" />
	<rule ref="category/java/errorprone.xml/EmptyStatementBlock" />
	<rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop" />
	<rule ref="category/java/errorprone.xml/EmptySwitchStatements" />
	<rule ref="category/java/errorprone.xml/EmptySynchronizedBlock" />
	<rule ref="category/java/errorprone.xml/EmptyTryBlock" />
	<rule ref="category/java/errorprone.xml/EmptyWhileStmt" />
	<rule ref="category/java/errorprone.xml/EqualsNull" />
	<rule ref="category/java/errorprone.xml/IdempotentOperations" />
	<rule ref="category/java/errorprone.xml/ImportFromSamePackage" />
	<rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
	<rule ref="category/java/errorprone.xml/JumbledIncrementer" />
	<rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
	<rule ref="category/java/errorprone.xml/MissingBreakInSwitch" />
	<rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
	<rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
	<rule ref="category/java/errorprone.xml/NonStaticInitializer" />
	<rule ref="category/java/errorprone.xml/NullAssignment" />
	<rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
	<rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull" />
	<rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
	<rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale" />
	<rule ref="category/java/errorprone.xml/SingleMethodSingleton" />
	<rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance" />
	<rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar" />
	<rule ref="category/java/errorprone.xml/SuspiciousOctalEscape" />
	<rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions" />
	<rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />
	<rule ref="category/java/errorprone.xml/UnnecessaryCaseChange" />
	<rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary" />
	<rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals" />
	<rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
	<rule ref="category/java/errorprone.xml/UselessOperationOnImmutable" />
	<rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel" />
	<rule ref="category/java/multithreading.xml/AvoidUsingVolatile" />
	<rule ref="category/java/multithreading.xml/DontCallThreadRun" />
	<rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />
	<rule ref="category/java/multithreading.xml/NonThreadSafeSingleton" />
	<rule ref="category/java/multithreading.xml/UseConcurrentHashMap" />
	<rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify" />
	<rule ref="category/java/performance.xml/AvoidUsingShortType" />
	<rule ref="category/java/performance.xml/AppendCharacterWithChar" />
	<rule ref="category/java/performance.xml/BigIntegerInstantiation" />
	<rule ref="category/java/performance.xml/BooleanInstantiation" />
	<rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse" />
	<rule ref="category/java/performance.xml/ConsecutiveLiteralAppends" />
	<rule ref="category/java/performance.xml/InefficientEmptyStringCheck" />
	<rule ref="category/java/performance.xml/InefficientStringBuffering" />
	<rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration" />
	<rule ref="category/java/performance.xml/OptimizableToArrayCall" />
	<rule ref="category/java/performance.xml/StringInstantiation" />
	<rule ref="category/java/performance.xml/StringToString" />
	<rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement" />
	<rule ref="category/java/performance.xml/UseIndexOfChar" />
	<rule ref="category/java/performance.xml/UselessStringValueOf" />
	<rule ref="category/java/performance.xml/UseStringBufferLength" />
</ruleset>
